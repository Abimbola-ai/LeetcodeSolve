# Given two binary strings a and b, return their sum as a binary string.

 

# Example 1:

# Input: a = "11", b = "1"
# Output: "100"
# Example 2:

# Input: a = "1010", b = "1011"
# Output: "10101"
 

# Constraints:

# 1 <= a.length, b.length <= 104
# a and b consist only of '0' or '1' characters.
# Each string does not contain leading zeros except for the zero itself.



class Solution:
    def addBinary(self, a: str, b: str) -> str:
        a = a[::-1]
        b = b[::-1]
        index = 0
        eol = True
        result=""
        carry = 0
        while eol:
            _a = _b = 0
            if index < len(a):
                _a = int(a[index])
            if index < len(b):
                _b = int(b[index])   

            #Make addition
            _sum = carry + _a + _b

            if _sum == 2:
                carry = 1
                _sum = 0
            elif _sum > 2:
                carry = 1
                _sum = 1
            else:
                carry = 0
            
            result += str(_sum)
            index += 1

            if index >= len(a) and index >= len(b):
                eol = False
                if (carry > 0):
                    result +=str(carry)
        return result[::-1]

        